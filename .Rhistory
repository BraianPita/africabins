require("africabins")
.libPaths()
install.packages("F:\Programming\DRC Project\africabins\africabins_1.4.0.tar.gz", repos = NULL, type="source")
install.packages("F:/Programming/DRC Project/africabins/africabins_1.4.0.tar.gz", repos = NULL, type="source")
require("africabins")
require("africabins")
install.packages("F:/Programming/DRC Project/africabins/africabins_1.4.0.tar.gz", repos = NULL, type="source")
install.packages("F:/Programming/DRC Project/africabins/africabins_1.4.0.tar.gz", repos = NULL, type="source")
require("africabins")
library(africabins)
library(africabins)
require(ggplot2)
require(statebins)
require(africabins)
data(USArrests)
USArrests$state <- rownames(USArrests)
a1 <- USArrests
a2 <- USArrests
a3 <- USArrests
a1$f <- 1
a2$f <- 2
a3$f <- 3
a4 <- rbind.data.frame(rbind.data.frame(a1, a2), a3)
ggplot(a4, aes(state=state, fill=Assault)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~f) -> gg
gb <- ggplot_build(gg)
expect_equal(length(gb$plot$facet), 3)
statebins(USArrests, value_col="Assault", name = "Assault") -> gg
gb <- ggplot_build(gg)
test_that("we can do something", {
require(ggplot2)
require(africabins)
data(USArrests)
USArrests$state <- rownames(USArrests)
a1 <- USArrests
a2 <- USArrests
a3 <- USArrests
a1$f <- 1
a2$f <- 2
a3$f <- 3
a4 <- rbind.data.frame(rbind.data.frame(a1, a2), a3)
ggplot(a4, aes(state=state, fill=Assault)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~f) -> gg
gb <- ggplot_build(gg)
expect_equal(length(gb$plot$facet), 3)
statebins(USArrests, value_col="Assault", name = "Assault") -> gg
gb <- ggplot_build(gg)
})
gb <- ggplot_build(gg)
gb
install.packages("testthat")
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "./countries_africa.csv")
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "test/testthat/countries_africa.csv")
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "/test/testthat/countries_africa.csv")
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
setwd("F:/Programming/DRC Project/africabins/africabins/tests/testthat")
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value)
require(tidyverse)
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value)
View(edges)
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category)
View(edges)
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category)
ggplot(a4, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~category) -> gg
gb <- ggplot_build(gg)
expect_equal(length(gb$plot$facet), 3)
statebins(USArrests, value_col="value", name = "value") -> gg
ggplot(a4, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~category) -> gg
gb <- ggplot_build(gg)
ggplot(a4, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~value) -> gg
gb <- ggplot_build(gg)
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category) %>%
mutate(category = case_when(value == "High" ~ 1,
TRUE ~ 2))
View(edges)
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category) %>%
mutate(category = case_when(value == "High" ~ 1,
value == "Low" ~ 2))
View(edges)
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category) %>%
mutate(category = case_when(category == "High" ~ 1,
category == "Low" ~ 2))
View(edges)
ggplot(a4, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~category) -> gg
gb <- ggplot_build(gg)
ggplot(a4, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() -> gg
gb <- ggplot_build(gg)
ggplot(edges, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~category) -> gg
gb <- ggplot_build(gg)
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category) %>%
mutate(category = case_when(category == "High" ~ 1,
category == "Low" ~ 2))
filter(Target %in% c("ESH", "MYT", "REU", "SHN"))
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category) %>%
mutate(category = case_when(category == "High" ~ 1,
category == "Low" ~ 2)) %>%
filter(Target %in% c("ESH", "MYT", "REU", "SHN"))
ggplot(edges, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~category) -> gg
gb <- ggplot_build(gg)
View(edges)
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category) %>%
mutate(category = case_when(category == "High" ~ 1,
category == "Low" ~ 2)) %>%
filter(!Target %in% c("ESH", "MYT", "REU", "SHN"))
View(edges)
ggplot(edges, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~category) -> gg
gb <- ggplot_build(gg)
library(africabins)
require(ggplot2)
require(africabins)
require(tidyverse)
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category) %>%
mutate(category = case_when(category == "High" ~ 1,
category == "Low" ~ 2)) %>%
filter(!Target %in% c("ESH", "MYT", "REU", "SHN"))
ggplot(edges, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~category) -> gg
gb <- ggplot_build(gg)
glimpse(gg)
View(gg)
library(africabins)
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category) %>%
mutate(category = case_when(category == "High" ~ 1,
category == "Low" ~ 2)) %>%
filter(!Target %in% c("ESH", "MYT", "REU", "SHN"))
ggplot(edges, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() +
ggplot2::facet_wrap(~category) -> gg
gb <- ggplot_build(gg)
expect_equal(length(gb$plot$facet), 3)
statebins(USArrests, value_col="value", name = "value") -> gg
statebins(edges, value_col="value", name = "value") -> gg
data(USArrests)
USArrests$state <- rownames(USArrests)
glimpse(USArrests)
rownames(edges) <- edges$Target
statebins(edges, value_col="value", name = "value") -> gg
statebins(edges, value_col="value", name = "Target") -> gg
statebins(edges, value_col="Target", name = "value") -> gg
gb <- ggplot_build(gg)
gb
# edges: create random connections between countries (nodes)
edges <- read.csv(file = "countries_africa.csv")
edges <- edges %>% filter(Source == "NGA" & value != 0.0) %>%
mutate(category = case_when(value > median(value) + (2 * sd(value)) ~ "High",
TRUE ~ "Low")) %>%
arrange(value) %>%
select(Target, value, category) %>%
mutate(category = case_when(category == "High" ~ 1,
category == "Low" ~ 2)) %>%
filter(!Target %in% c("ESH", "MYT", "REU", "SHN"))
rownames(edges) <- edges$Target
ggplot(edges, aes(state=Target, fill=value)) +
geom_statebins() +
coord_equal() -> gg
gb <- ggplot_build(gg)
gb
